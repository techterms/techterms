name: Release

on:
  push:
    branches: ['feature/improve-release-information']

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: false

env:
  BUILD_PATH: '.'

jobs:
  test-release:
    name: Test Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.BOT_PAT }}
          fetch-depth: 0 # Needed for pushing tags

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
      - name: Bump patch version
        id: bump
        run: |
          current_version=$(jq -r '.version' version.json)
          IFS='.' read -r major minor patch <<< "$current_version"
          patch=$((patch + 1))
          new_version="$major.$minor.$patch"
          echo "new_version=$new_version" >> $GITHUB_OUTPUT
          jq --arg v "$new_version" '.version = $v' version.json > tmp.json && mv tmp.json version.json

      - name: Generate release notes
        id: release_notes
        run: |
          # Get the previous tag
          previous_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          
          if [ -z "$previous_tag" ]; then
            # If no previous tag, get all commits
            commits=$(git log --oneline --no-merges --format="* %s" HEAD)
          else
            # Get commits since the last tag, excluding merge commits and version bumps
            commits=$(git log --oneline --no-merges --format="* %s" ${previous_tag}..HEAD | grep -v "chore: bump version")
          fi
          
          # Create release body
          if [ -z "$commits" ]; then
            echo "body=No new commits in this release." >> $GITHUB_OUTPUT
          else
            {
              echo "## What's Changed"
              echo ""
              echo "$commits"
            } > temp_release_notes.txt
            
            echo "body<<EOF" >> $GITHUB_OUTPUT
            cat temp_release_notes.txt >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Show Release Body
        run: |
          echo "${{ steps.release_notes.outputs.body }}"

